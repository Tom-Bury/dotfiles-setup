# Move the directory to the second line
format = '$all$directory$character'

[aws]
symbol = " "
format = "[$symbol]($style)"

[buf]
symbol = " "
format = "[$symbol]($style)"

[c]
symbol = " "
format = "[$symbol]($style)"

[conda]
symbol = " "
format = "[$symbol]($style)"

[crystal]
symbol = " "
format = "[$symbol]($style)"

[dart]
symbol = " "
format = "[$symbol]($style)"

[directory]
truncation_length = 1
truncation_symbol = '…/'
read_only = " 󰌾"

[docker_context]
symbol = " "
format = "[$symbol]($style)"

[elixir]
symbol = " "
format = "[$symbol]($style)"

[elm]
symbol = " "
format = "[$symbol]($style)"

[fennel]
symbol = " "
format = "[$symbol]($style)"

[fossil_branch]
symbol = " "
format = "[$symbol]($style)"

[git_status]
ahead = '⇡${count}'
diverged = '⇡${ahead_count}⇣${behind_count}'
behind = '⇣${count}'
format = '([\[$conflicted$deleted$renamed$modified$staged$untracked$ahead_behind\]]($style) )'

[gcloud]
disabled = true

[golang]
symbol = " "
format = "[$symbol]($style)"

[guix_shell]
symbol = " "
format = "[$symbol]($style)"

[haskell]
symbol = " "
format = "[$symbol]($style)"

[haxe]
symbol = " "
format = "[$symbol]($style)"

[hg_branch]
symbol = " "
format = "[$symbol]($style)"

[hostname]
ssh_symbol = " "
format = "[$symbol]($style)"

[java]
symbol = " "
format = "[$symbol]($style)"

[julia]
symbol = " "
format = "[$symbol]($style)"

[kotlin]
symbol = " "
format = "[$symbol]($style)"

[lua]
symbol = " "
format = "[$symbol]($style)"

[memory_usage]
symbol = "󰍛 "
format = "[$symbol]($style)"

[meson]
symbol = " 󰔷"
format = "[$symbol]($style)"

[nim]
symbol = " 󰆥"
format = "[$symbol]($style)"

[nix_shell]
symbol = " "
format = "[$symbol]($style)"

[nodejs]
symbol = " "
format = "[$symbol]($style)"

[ocaml]
symbol = " "
format = "[$symbol]($style)"

[os.symbols]
Alpaquita = " "
Alpine = " "
Amazon = " "
Android = " "
Arch = " "
Artix = " "
CentOS = " "
Debian = " "
DragonFly = " "
Emscripten = " "
EndeavourOS = " "
Fedora = " "
FreeBSD = " "
Garuda = "󰛓 "
Gentoo = " "
HardenedBSD = "󰞌 "
Illumos = "󰈸 "
Linux = " "
Mabox = " "
Macos = " "
Manjaro = " "
Mariner = " "
MidnightBSD = " "
Mint = " "
NetBSD = " "
NixOS = " "
OpenBSD = "󰈺 "
openSUSE = " "
OracleLinux = "󰌷 "
Pop = " "
Raspbian = " "
Redhat = " "
RedHatEnterprise = " "
Redox = "󰀘 "
Solus = "󰠳 "
SUSE = " "
Ubuntu = " "
Unknown = " "
Windows = "󰍲 "

[package]
symbol = " 󰏗"
format = "[$symbol]($style)"

[perl]
symbol = " "
format = "[$symbol]($style)"

[php]
symbol = " "
format = "[$symbol]($style)"

[pijul_channel]
symbol = " "
format = "[$symbol]($style)"

[python]
symbol = " "
format = "[$symbol]($style)"

[rlang]
symbol = " 󰟔"
format = "[$symbol]($style)"

[ruby]
symbol = " "
format = "[$symbol]($style)"

[rust]
symbol = " "
format = "[$symbol]($style)"

[scala]
symbol = " "
format = "[$symbol]($style)"

[swift]
symbol = " "
format = "[$symbol]($style)"

[zig]
symbol = " "
format = "[$symbol]($style)"

# https://github.com/jj-vcs/jj/wiki/Starship
# custom module for jj status
[custom.jj]
ignore_timeout = true
description = "The current jj status"
detect_folders = [".jj"]
symbol = " "
command = '''
jj log --revisions @ --no-graph --ignore-working-copy --color always --limit 1 --template '
  separate(" ",
    change_id.shortest(4),
    bookmarks,
    "|",
    concat(
      if(conflict, "💥"),
      if(divergent, "🚧"),
      if(hidden, "👻"),
      if(immutable, "🔒"),
    ),
    raw_escape_sequence("\x1b[1;32m") ++ if(empty, "(empty)"),
    raw_escape_sequence("\x1b[1;32m") ++ coalesce(
      truncate_end(29, description.first_line(), "…"),
      "(no description set)",
    ) ++ raw_escape_sequence("\x1b[0m"),
  )
'
'''

[git_branch]
symbol = " "
format = "[$symbol$branch]($style) "
disabled = true

[git_state]
disabled = true

[git_commit]
disabled = true

[git_metrics]
disabled = true

# re-enable git_branch as long as we're not in a jj repo
[custom.git_branch]
when = true
command = "jj root >/dev/null 2>&1 || starship module git_branch"
description = "Only show git_branch if we're not in a jj repo"