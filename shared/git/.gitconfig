[user]
	name = Tom Bury
	useConfigOnly = true

[core]
    editor = ~/.gvm/pkgsets/go1.23.2/global/bin/jot
    whitespace = error
    preloadindex = true
    pager = diff-so-fancy | less --tabs=4 -RF

[interactive]
    diffFilter = diff-so-fancy --patch

[push]
	autoSetupRemote = true

[fetch]
    prune = true

[status]
    branch = true
    short = true
    showStash = true

[rebase]
	updateRefs = false
    autoStash = true

[pull]
    rebase = true

[diff]
    context = 3
    mnemonicPrefix = true
    renames = copies
    interHunkContext = 10

[color "diff"]
    meta = black bold
    frag = magenta
    context = white
    whitespace = yellow reverse
    old = red

[pretty]
	simple = format:%C(white)%s%C(reset)%C(auto)%(decorate:tag=,separator= )%C(reset)%n%C(white)â¤·%C(reset) %C(240)%ad%C(reset) %C(italic 66)%an%C(reset) %C(130)%h%C(reset)%n

[alias]
	lg  = -c core.pager='less -SRF' log --pretty=simple --graph --date=format:'%Y-%m-%d %H:%M' --decorate @{u}
	lga  = -c core.pager='less -SRF' log --pretty=simple --graph --date=format:'%Y-%m-%d %H:%M' --decorate @{u} --all
	lgs  = -c core.pager='less -SRF' log --pretty=simple --graph --cc --stat --date=format:'%Y-%m-%d %H:%M' --decorate @{u}
	lgd  = -c core.pager='less -SRF' log --pretty=simple --graph --cc --patch --date=format:'%Y-%m-%d %H:%M' --decorate @{u}
	
	lgg  = -c core.pager='less -SRF' log --pretty=simple --graph --date=format:'%Y-%m-%d %H:%M'
	review-local = "!git lgg @{push}.."
    rl = "review-local"
	diverge = ! "git lgg $(git merge-base $1 $2)^..$1 $(git merge-base $1 $2)^..$2"

	email = config --local user.email
	
    find-tag = rev-list -n 1
    s = status
    c = commit -m
    ca = commit -am
    b = branch
    cb = checkout -b
    ps = push
    psh = push
    psf = push --force
    pshf = push --force
    pl = pull
    pll = pull
    f = fetch
    a = add -i
    rba = rebase --update-refs
    r = restore
    swr = "!git fetch origin && git checkout $(git branch -r | sed 's/origin\\///' | fzf)"
    rst = "!git clean -df && git checkout -- ."

    rename-branch = branch -m

# https://opensource.googleblog.com/2018/05/introducing-git-protocol-version-2.html
[protocol]
	version = 2



